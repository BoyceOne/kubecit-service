// Code generated by ent, DO NOT EDIT.

package slider

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the slider type in the database.
	Label = "slider"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldContent holds the string denoting the content field in the database.
	FieldContent = "content"
	// FieldImageLink holds the string denoting the image_link field in the database.
	FieldImageLink = "image_link"
	// FieldCreateAt holds the string denoting the create_at field in the database.
	FieldCreateAt = "create_at"
	// FieldUpdateAt holds the string denoting the update_at field in the database.
	FieldUpdateAt = "update_at"
	// FieldIsValid holds the string denoting the is_valid field in the database.
	FieldIsValid = "is_valid"
	// FieldPriority holds the string denoting the priority field in the database.
	FieldPriority = "priority"
	// Table holds the table name of the slider in the database.
	Table = "sliders"
)

// Columns holds all SQL columns for slider fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldContent,
	FieldImageLink,
	FieldCreateAt,
	FieldUpdateAt,
	FieldIsValid,
	FieldPriority,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// TitleValidator is a validator for the "title" field. It is called by the builders before save.
	TitleValidator func(string) error
	// ContentValidator is a validator for the "content" field. It is called by the builders before save.
	ContentValidator func(string) error
	// ImageLinkValidator is a validator for the "image_link" field. It is called by the builders before save.
	ImageLinkValidator func(string) error
	// DefaultCreateAt holds the default value on creation for the "create_at" field.
	DefaultCreateAt time.Time
	// DefaultUpdateAt holds the default value on creation for the "update_at" field.
	DefaultUpdateAt time.Time
	// UpdateDefaultUpdateAt holds the default value on update for the "update_at" field.
	UpdateDefaultUpdateAt func() time.Time
	// DefaultIsValid holds the default value on creation for the "is_valid" field.
	DefaultIsValid bool
)

// OrderOption defines the ordering options for the Slider queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByTitle orders the results by the title field.
func ByTitle(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTitle, opts...).ToFunc()
}

// ByContent orders the results by the content field.
func ByContent(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldContent, opts...).ToFunc()
}

// ByImageLink orders the results by the image_link field.
func ByImageLink(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldImageLink, opts...).ToFunc()
}

// ByCreateAt orders the results by the create_at field.
func ByCreateAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreateAt, opts...).ToFunc()
}

// ByUpdateAt orders the results by the update_at field.
func ByUpdateAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdateAt, opts...).ToFunc()
}

// ByIsValid orders the results by the is_valid field.
func ByIsValid(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIsValid, opts...).ToFunc()
}

// ByPriority orders the results by the priority field.
func ByPriority(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPriority, opts...).ToFunc()
}
